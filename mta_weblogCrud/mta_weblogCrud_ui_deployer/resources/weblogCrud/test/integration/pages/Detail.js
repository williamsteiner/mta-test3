sap.ui.define(["sap/ui/test/Opa5","com/owi/webmin/weblogCrud/test/integration/pages/Common","sap/ui/test/matchers/AggregationLengthEquals","sap/ui/test/matchers/AggregationFilled","sap/ui/test/matchers/PropertyStrictEquals"],function(e,t,i,s,n){"use strict";var r="Detail";e.createPageObjects({onTheDetailPage:{baseClass:t,actions:{iPressTheBackButton:function(){return this.waitFor({id:"page",viewName:r,success:function(e){e.$("navButton").trigger("tap")},errorMessage:"Did not find the nav button on detail page"})},iPressOnTheShareButton:function(){return this.waitFor({controlType:"sap.m.Button",viewName:r,matchers:new sap.ui.test.matchers.PropertyStrictEquals({name:"icon",value:"sap-icon://action"}),success:function(e){e[0].$().trigger("tap")},errorMessage:"Did not find the share button on detail page"})},iPressTheEditButton:function(){return this.waitFor({id:"edit",viewName:r,success:function(e){e.$().trigger("tap")},errorMessage:"Could not find the edit button"})}},assertions:{iShouldSeeTheBusyIndicator:function(){return this.waitFor({id:"page",viewName:r,success:function(t){e.assert.ok(t.getBusy(),"The detail view is busy")},errorMessage:"The detail view is not busy."})},iShouldSeeNoBusyIndicator:function(){return this.waitFor({id:"page",viewName:r,matchers:function(e){return!e.getBusy()},success:function(t){e.assert.ok(!t.getBusy(),"The detail view is not busy")},errorMessage:"The detail view is busy."})},theObjectPageShowsTheFirstObject:function(){return this.iShouldBeOnTheObjectNPage(0)},iShouldBeOnTheObjectNPage:function(t){return this.waitFor(this.createAWaitForAnEntitySet({entitySet:"weblog",success:function(i){var s=i[t].Name;this.waitFor({controlType:"sap.m.ObjectHeader",viewName:r,matchers:new n({name:"title",value:i[t].Name}),success:function(){e.assert.ok(true,"was on the first object page with the name "+s)},errorMessage:"First object is not shown"})}}))},iShouldSeeTheRememberedObject:function(){return this.waitFor({success:function(){var e=this.getContext().currentItem.bindingPath;this._waitForPageBindingPath(e)}})},_waitForPageBindingPath:function(t){return this.waitFor({id:"page",viewName:r,matchers:function(e){return e.getBindingContext()&&e.getBindingContext().getPath()===t},success:function(i){e.assert.strictEqual(i.getBindingContext().getPath(),t,"was on the remembered detail page")},errorMessage:"Remembered object "+t+" is not shown"})},iShouldSeeTheObjectLineItemsList:function(){return this.waitFor({id:"lineItemsList",viewName:r,success:function(t){e.assert.ok(t,"Found the line items list.")}})},theLineItemsListShouldHaveTheCorrectNumberOfItems:function(){return this.waitFor(this.createAWaitForAnEntitySet({entitySet:"",success:function(t){return this.waitFor({id:"lineItemsList",viewName:r,matchers:new s({name:"items"}),check:function(e){var i=e.getBindingContext().getProperty("ROWID");var s=t.filter(function(e){return e.ROWID===i}).length;return e.getItems().length===s},success:function(){e.assert.ok(true,"The list has the correct number of items")},errorMessage:"The list does not have the correct number of items."})}}))},theDetailViewShouldContainOnlyFormattedUnitNumbers:function(){return this.theUnitNumbersShouldHaveTwoDecimals("sap.m.ObjectHeader",r,"Object header are properly formatted","Object view has no entries which can be checked for their formatting")},theLineItemsHeaderShouldDisplayTheAmountOfEntries:function(){return this.waitFor({id:"lineItemsList",viewName:r,matchers:new s({name:"items"}),success:function(t){var i=t.getItems().length;return this.waitFor({id:"lineItemsHeader",viewName:r,matchers:new n({name:"text",value:" ("+i+")"}),success:function(){e.assert.ok(true,"The line item list displays "+i+" items")},errorMessage:"The line item list does not display "+i+" items."})}})},iShouldSeeTheShareEmailButton:function(){return this.waitFor({id:"shareEmail",viewName:r,success:function(){e.assert.ok(true,"The E-Mail button is visible")},errorMessage:"The E-Mail button was not found"})},iShouldSeeTheShareTileButton:function(){return this.waitFor({id:"shareTile",viewName:r,success:function(){e.assert.ok(true,"The Save as Tile button is visible")},errorMessage:"The Save as Tile  button was not found"})},theShareTileButtonShouldContainTheRememberedObjectName:function(){return this.waitFor({id:"shareTile",viewName:r,matchers:function(e){var t=this.getContext().currentItem.title;var i=e.getTitle();return i&&i.indexOf(t)>-1}.bind(this),success:function(){e.assert.ok(true,"The Save as Tile button contains the oject name")},errorMessage:"The Save as Tile did not contain the object name"})}}}})});